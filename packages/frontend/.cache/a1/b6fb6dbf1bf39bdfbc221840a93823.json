{"id":"node_modules/blake2b-wasm/index.js","dependencies":[{"name":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/package.json","includedInParent":true,"mtime":1615450399471},{"name":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/node_modules/blake2b-wasm/package.json","includedInParent":true,"mtime":1615429411695},{"name":"nanoassert","loc":{"line":1,"column":21},"parent":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/node_modules/blake2b-wasm/index.js","resolved":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/node_modules/nanoassert/index.js"},{"name":"./blake2b","loc":{"line":2,"column":19},"parent":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/node_modules/blake2b-wasm/index.js","resolved":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/node_modules/blake2b-wasm/blake2b.js"}],"generated":{"js":"var assert = require('nanoassert')\nvar wasm = require('./blake2b')()\n\nvar head = 64\nvar freeList = []\n\nmodule.exports = Blake2b\nvar BYTES_MIN = module.exports.BYTES_MIN = 16\nvar BYTES_MAX = module.exports.BYTES_MAX = 64\nvar BYTES = module.exports.BYTES = 32\nvar KEYBYTES_MIN = module.exports.KEYBYTES_MIN = 16\nvar KEYBYTES_MAX = module.exports.KEYBYTES_MAX = 64\nvar KEYBYTES = module.exports.KEYBYTES = 32\nvar SALTBYTES = module.exports.SALTBYTES = 16\nvar PERSONALBYTES = module.exports.PERSONALBYTES = 16\n\nfunction Blake2b (digestLength, key, salt, personal, noAssert) {\n  if (!(this instanceof Blake2b)) return new Blake2b(digestLength, key, salt, personal, noAssert)\n  if (!(wasm && wasm.exports)) throw new Error('WASM not loaded. Wait for Blake2b.ready(cb)')\n  if (!digestLength) digestLength = 32\n\n  if (noAssert !== true) {\n    assert(digestLength >= BYTES_MIN, 'digestLength must be at least ' + BYTES_MIN + ', was given ' + digestLength)\n    assert(digestLength <= BYTES_MAX, 'digestLength must be at most ' + BYTES_MAX + ', was given ' + digestLength)\n    if (key != null) assert(key.length >= KEYBYTES_MIN, 'key must be at least ' + KEYBYTES_MIN + ', was given ' + key.length)\n    if (key != null) assert(key.length <= KEYBYTES_MAX, 'key must be at least ' + KEYBYTES_MAX + ', was given ' + key.length)\n    if (salt != null) assert(salt.length === SALTBYTES, 'salt must be exactly ' + SALTBYTES + ', was given ' + salt.length)\n    if (personal != null) assert(personal.length === PERSONALBYTES, 'personal must be exactly ' + PERSONALBYTES + ', was given ' + personal.length)\n  }\n\n  if (!freeList.length) {\n    freeList.push(head)\n    head += 216\n  }\n\n  this.digestLength = digestLength\n  this.finalized = false\n  this.pointer = freeList.pop()\n\n  wasm.memory.fill(0, 0, 64)\n  wasm.memory[0] = this.digestLength\n  wasm.memory[1] = key ? key.length : 0\n  wasm.memory[2] = 1 // fanout\n  wasm.memory[3] = 1 // depth\n\n  if (salt) wasm.memory.set(salt, 32)\n  if (personal) wasm.memory.set(personal, 48)\n\n  if (this.pointer + 216 > wasm.memory.length) wasm.realloc(this.pointer + 216) // we need 216 bytes for the state\n  wasm.exports.blake2b_init(this.pointer, this.digestLength)\n\n  if (key) {\n    this.update(key)\n    wasm.memory.fill(0, head, head + key.length) // whiteout key\n    wasm.memory[this.pointer + 200] = 128\n  }\n}\n\n\nBlake2b.prototype.update = function (input) {\n  assert(this.finalized === false, 'Hash instance finalized')\n  assert(input, 'input must be TypedArray or Buffer')\n\n  if (head + input.length > wasm.memory.length) wasm.realloc(head + input.length)\n  wasm.memory.set(input, head)\n  wasm.exports.blake2b_update(this.pointer, head, head + input.length)\n  return this\n}\n\nBlake2b.prototype.digest = function (enc) {\n  assert(this.finalized === false, 'Hash instance finalized')\n  this.finalized = true\n\n  freeList.push(this.pointer)\n  wasm.exports.blake2b_final(this.pointer)\n\n  if (!enc || enc === 'binary') {\n    return wasm.memory.slice(this.pointer + 128, this.pointer + 128 + this.digestLength)\n  }\n\n  if (enc === 'hex') {\n    return hexSlice(wasm.memory, this.pointer + 128, this.digestLength)\n  }\n\n  assert(enc.length >= this.digestLength, 'input must be TypedArray or Buffer')\n  for (var i = 0; i < this.digestLength; i++) {\n    enc[i] = wasm.memory[this.pointer + 128 + i]\n  }\n\n  return enc\n}\n\n// libsodium compat\nBlake2b.prototype.final = Blake2b.prototype.digest\n\nBlake2b.WASM = wasm && wasm.buffer\nBlake2b.SUPPORTED = typeof WebAssembly !== 'undefined'\n\nBlake2b.ready = function (cb) {\n  if (!cb) cb = noop\n  if (!wasm) return cb(new Error('WebAssembly not supported'))\n\n  // backwards compat, can be removed in a new major\n  var p = new Promise(function (reject, resolve) {\n    wasm.onload(function (err) {\n      if (err) resolve()\n      else reject()\n      cb(err)\n    })\n  })\n\n  return p\n}\n\nBlake2b.prototype.ready = Blake2b.ready\n\nfunction noop () {}\n\nfunction hexSlice (buf, start, len) {\n  var str = ''\n  for (var i = 0; i < len; i++) str += toHex(buf[start + i])\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/blake2b-wasm/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/blake2b-wasm/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}}],"sources":{"node_modules/blake2b-wasm/index.js":"var assert = require('nanoassert')\nvar wasm = require('./blake2b')()\n\nvar head = 64\nvar freeList = []\n\nmodule.exports = Blake2b\nvar BYTES_MIN = module.exports.BYTES_MIN = 16\nvar BYTES_MAX = module.exports.BYTES_MAX = 64\nvar BYTES = module.exports.BYTES = 32\nvar KEYBYTES_MIN = module.exports.KEYBYTES_MIN = 16\nvar KEYBYTES_MAX = module.exports.KEYBYTES_MAX = 64\nvar KEYBYTES = module.exports.KEYBYTES = 32\nvar SALTBYTES = module.exports.SALTBYTES = 16\nvar PERSONALBYTES = module.exports.PERSONALBYTES = 16\n\nfunction Blake2b (digestLength, key, salt, personal, noAssert) {\n  if (!(this instanceof Blake2b)) return new Blake2b(digestLength, key, salt, personal, noAssert)\n  if (!(wasm && wasm.exports)) throw new Error('WASM not loaded. Wait for Blake2b.ready(cb)')\n  if (!digestLength) digestLength = 32\n\n  if (noAssert !== true) {\n    assert(digestLength >= BYTES_MIN, 'digestLength must be at least ' + BYTES_MIN + ', was given ' + digestLength)\n    assert(digestLength <= BYTES_MAX, 'digestLength must be at most ' + BYTES_MAX + ', was given ' + digestLength)\n    if (key != null) assert(key.length >= KEYBYTES_MIN, 'key must be at least ' + KEYBYTES_MIN + ', was given ' + key.length)\n    if (key != null) assert(key.length <= KEYBYTES_MAX, 'key must be at least ' + KEYBYTES_MAX + ', was given ' + key.length)\n    if (salt != null) assert(salt.length === SALTBYTES, 'salt must be exactly ' + SALTBYTES + ', was given ' + salt.length)\n    if (personal != null) assert(personal.length === PERSONALBYTES, 'personal must be exactly ' + PERSONALBYTES + ', was given ' + personal.length)\n  }\n\n  if (!freeList.length) {\n    freeList.push(head)\n    head += 216\n  }\n\n  this.digestLength = digestLength\n  this.finalized = false\n  this.pointer = freeList.pop()\n\n  wasm.memory.fill(0, 0, 64)\n  wasm.memory[0] = this.digestLength\n  wasm.memory[1] = key ? key.length : 0\n  wasm.memory[2] = 1 // fanout\n  wasm.memory[3] = 1 // depth\n\n  if (salt) wasm.memory.set(salt, 32)\n  if (personal) wasm.memory.set(personal, 48)\n\n  if (this.pointer + 216 > wasm.memory.length) wasm.realloc(this.pointer + 216) // we need 216 bytes for the state\n  wasm.exports.blake2b_init(this.pointer, this.digestLength)\n\n  if (key) {\n    this.update(key)\n    wasm.memory.fill(0, head, head + key.length) // whiteout key\n    wasm.memory[this.pointer + 200] = 128\n  }\n}\n\n\nBlake2b.prototype.update = function (input) {\n  assert(this.finalized === false, 'Hash instance finalized')\n  assert(input, 'input must be TypedArray or Buffer')\n\n  if (head + input.length > wasm.memory.length) wasm.realloc(head + input.length)\n  wasm.memory.set(input, head)\n  wasm.exports.blake2b_update(this.pointer, head, head + input.length)\n  return this\n}\n\nBlake2b.prototype.digest = function (enc) {\n  assert(this.finalized === false, 'Hash instance finalized')\n  this.finalized = true\n\n  freeList.push(this.pointer)\n  wasm.exports.blake2b_final(this.pointer)\n\n  if (!enc || enc === 'binary') {\n    return wasm.memory.slice(this.pointer + 128, this.pointer + 128 + this.digestLength)\n  }\n\n  if (enc === 'hex') {\n    return hexSlice(wasm.memory, this.pointer + 128, this.digestLength)\n  }\n\n  assert(enc.length >= this.digestLength, 'input must be TypedArray or Buffer')\n  for (var i = 0; i < this.digestLength; i++) {\n    enc[i] = wasm.memory[this.pointer + 128 + i]\n  }\n\n  return enc\n}\n\n// libsodium compat\nBlake2b.prototype.final = Blake2b.prototype.digest\n\nBlake2b.WASM = wasm && wasm.buffer\nBlake2b.SUPPORTED = typeof WebAssembly !== 'undefined'\n\nBlake2b.ready = function (cb) {\n  if (!cb) cb = noop\n  if (!wasm) return cb(new Error('WebAssembly not supported'))\n\n  // backwards compat, can be removed in a new major\n  var p = new Promise(function (reject, resolve) {\n    wasm.onload(function (err) {\n      if (err) resolve()\n      else reject()\n      cb(err)\n    })\n  })\n\n  return p\n}\n\nBlake2b.prototype.ready = Blake2b.ready\n\nfunction noop () {}\n\nfunction hexSlice (buf, start, len) {\n  var str = ''\n  for (var i = 0; i < len; i++) str += toHex(buf[start + i])\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n"},"lineCount":129}},"error":null,"hash":"0aa8444a3c51169a5d9006f6f1f03c90","cacheData":{"env":{}}}