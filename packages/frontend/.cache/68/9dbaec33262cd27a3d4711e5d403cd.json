{"id":"node_modules/circomlib/src/smt_memdb.js","dependencies":[{"name":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/package.json","includedInParent":true,"mtime":1615450399471},{"name":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/node_modules/circomlib/package.json","includedInParent":true,"mtime":1615429408998},{"name":"snarkjs","loc":{"line":1,"column":23},"parent":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/node_modules/circomlib/src/smt_memdb.js","resolved":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/node_modules/snarkjs/index.js"}],"generated":{"js":"const bigInt = require(\"snarkjs\").bigInt;\n\nclass SMTMemDb {\n    constructor() {\n        this.nodes = {};\n        this.root = bigInt(0);\n    }\n\n    async getRoot() {\n        return this.root;\n    }\n\n    _key2str(k) {\n        // const keyS = bigInt(key).leInt2Buff(32).toString(\"hex\");\n        const keyS = bigInt(k).toString();\n        return keyS;\n    }\n\n    _normalize(n) {\n        for (let i=0; i<n.length; i++) {\n            n[i] = bigInt(n[i]);\n        }\n    }\n\n    async get(key) {\n        const keyS = this._key2str(key);\n        return this.nodes[keyS];\n    }\n\n    async multiGet(keys) {\n        const promises = [];\n        for (let i=0; i<keys.length; i++) {\n            promises.push(this.get(keys[i]));\n        }\n        return await Promise.all(promises);\n    }\n\n    async setRoot(rt) {\n        this.root = rt;\n    }\n\n    async multiIns(inserts) {\n        for (let i=0; i<inserts.length; i++) {\n            const keyS = this._key2str(inserts[i][0]);\n            this._normalize(inserts[i][1]);\n            this.nodes[keyS] = inserts[i][1];\n        }\n    }\n\n    async multiDel(dels) {\n        for (let i=0; i<dels.length; i++) {\n            const keyS = this._key2str(dels[i]);\n            delete this.nodes[keyS];\n        }\n    }\n}\n\nmodule.exports = SMTMemDb;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/circomlib/src/smt_memdb.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}}],"sources":{"node_modules/circomlib/src/smt_memdb.js":"const bigInt = require(\"snarkjs\").bigInt;\n\nclass SMTMemDb {\n    constructor() {\n        this.nodes = {};\n        this.root = bigInt(0);\n    }\n\n    async getRoot() {\n        return this.root;\n    }\n\n    _key2str(k) {\n        // const keyS = bigInt(key).leInt2Buff(32).toString(\"hex\");\n        const keyS = bigInt(k).toString();\n        return keyS;\n    }\n\n    _normalize(n) {\n        for (let i=0; i<n.length; i++) {\n            n[i] = bigInt(n[i]);\n        }\n    }\n\n    async get(key) {\n        const keyS = this._key2str(key);\n        return this.nodes[keyS];\n    }\n\n    async multiGet(keys) {\n        const promises = [];\n        for (let i=0; i<keys.length; i++) {\n            promises.push(this.get(keys[i]));\n        }\n        return await Promise.all(promises);\n    }\n\n    async setRoot(rt) {\n        this.root = rt;\n    }\n\n    async multiIns(inserts) {\n        for (let i=0; i<inserts.length; i++) {\n            const keyS = this._key2str(inserts[i][0]);\n            this._normalize(inserts[i][1]);\n            this.nodes[keyS] = inserts[i][1];\n        }\n    }\n\n    async multiDel(dels) {\n        for (let i=0; i<dels.length; i++) {\n            const keyS = this._key2str(dels[i]);\n            delete this.nodes[keyS];\n        }\n    }\n}\n\nmodule.exports = SMTMemDb;\n"},"lineCount":59}},"error":null,"hash":"9a4b1306b5e777ea0df2c60e38dfa6bf","cacheData":{"env":{}}}