{"id":"node_modules/circomlib/src/mimcsponge.js","dependencies":[{"name":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/package.json","includedInParent":true,"mtime":1615450399471},{"name":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/node_modules/circomlib/package.json","includedInParent":true,"mtime":1615429408998},{"name":"snarkjs","loc":{"line":2,"column":23},"parent":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/node_modules/circomlib/src/mimcsponge.js","resolved":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/node_modules/snarkjs/index.js"},{"name":"web3-utils","loc":{"line":3,"column":26},"parent":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/node_modules/circomlib/src/mimcsponge.js","resolved":"/Users/riyasingh/myapps/semaphore-mini/packages/frontend/node_modules/web3-utils/lib/index.js"}],"generated":{"js":"const bn128 = require(\"snarkjs\").bn128;\nconst bigInt = require(\"snarkjs\").bigInt;\nconst Web3Utils = require(\"web3-utils\");\nconst F = bn128.Fr;\n\nconst SEED = \"mimcsponge\";\nconst NROUNDS = 220;\n\nexports.getIV = (seed) => {\n    if (typeof seed === \"undefined\") seed = SEED;\n    const c = Web3Utils.keccak256(seed+\"_iv\");\n    const cn = bigInt(Web3Utils.toBN(c).toString());\n    const iv = cn.mod(F.q);\n    return iv;\n};\n\nexports.getConstants = (seed, nRounds) => {\n    if (typeof seed === \"undefined\") seed = SEED;\n    if (typeof nRounds === \"undefined\") nRounds = NROUNDS;\n    const cts = new Array(nRounds);\n    let c = Web3Utils.keccak256(SEED);\n    for (let i=1; i<nRounds; i++) {\n        c = Web3Utils.keccak256(c);\n\n        const n1 = Web3Utils.toBN(c).mod(Web3Utils.toBN(F.q.toString()));\n        const c2 = Web3Utils.padLeft(Web3Utils.toHex(n1), 64);\n        cts[i] = bigInt(Web3Utils.toBN(c2).toString());\n    }\n    cts[0] = bigInt(0);\n    cts[cts.length - 1] = bigInt(0);\n    return cts;\n};\n\nconst cts = exports.getConstants(SEED, NROUNDS);\n\nexports.hash = (_xL_in, _xR_in, _k) =>{\n    let xL = bigInt(_xL_in);\n    let xR = bigInt(_xR_in);\n    const k = bigInt(_k);\n    for (let i=0; i<NROUNDS; i++) {\n        const c = cts[i];\n        const t = (i==0) ? F.add(xL, k) : F.add(F.add(xL, k), c);\n        const xR_tmp = bigInt(xR);\n        if (i < (NROUNDS - 1)) {\n          xR = xL;\n          xL = F.add(xR_tmp, F.exp(t, 5));\n        } else {\n          xR = F.add(xR_tmp, F.exp(t, 5));\n        }\n    }\n    return {\n      xL: F.affine(xL),\n      xR: F.affine(xR),\n    };\n};\n\nexports.multiHash = (arr, key, numOutputs) => {\n    if (typeof(numOutputs) === \"undefined\") {\n      numOutputs = 1;\n    }\n    if (typeof(key) === \"undefined\") {\n        key = F.zero;\n    }\n\n    let R = F.zero;\n    let C = F.zero;\n\n    for (let i=0; i<arr.length; i++) {\n      R = F.add(R, bigInt(arr[i]));\n      const S = exports.hash(R, C, key);\n      R = S.xL;\n      C = S.xR;\n    }\n    let outputs = [R];\n    for (let i=1; i < numOutputs; i++) {\n      const S = exports.hash(R, C, key);\n      R = S.xL;\n      C = S.xR;\n      outputs.push(R);\n    }\n    if (numOutputs == 1) {\n      return F.affine(outputs[0]);\n    } else {\n      return outputs.map(x => F.affine(x));\n    }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/circomlib/src/mimcsponge.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}}],"sources":{"node_modules/circomlib/src/mimcsponge.js":"const bn128 = require(\"snarkjs\").bn128;\nconst bigInt = require(\"snarkjs\").bigInt;\nconst Web3Utils = require(\"web3-utils\");\nconst F = bn128.Fr;\n\nconst SEED = \"mimcsponge\";\nconst NROUNDS = 220;\n\nexports.getIV = (seed) => {\n    if (typeof seed === \"undefined\") seed = SEED;\n    const c = Web3Utils.keccak256(seed+\"_iv\");\n    const cn = bigInt(Web3Utils.toBN(c).toString());\n    const iv = cn.mod(F.q);\n    return iv;\n};\n\nexports.getConstants = (seed, nRounds) => {\n    if (typeof seed === \"undefined\") seed = SEED;\n    if (typeof nRounds === \"undefined\") nRounds = NROUNDS;\n    const cts = new Array(nRounds);\n    let c = Web3Utils.keccak256(SEED);\n    for (let i=1; i<nRounds; i++) {\n        c = Web3Utils.keccak256(c);\n\n        const n1 = Web3Utils.toBN(c).mod(Web3Utils.toBN(F.q.toString()));\n        const c2 = Web3Utils.padLeft(Web3Utils.toHex(n1), 64);\n        cts[i] = bigInt(Web3Utils.toBN(c2).toString());\n    }\n    cts[0] = bigInt(0);\n    cts[cts.length - 1] = bigInt(0);\n    return cts;\n};\n\nconst cts = exports.getConstants(SEED, NROUNDS);\n\nexports.hash = (_xL_in, _xR_in, _k) =>{\n    let xL = bigInt(_xL_in);\n    let xR = bigInt(_xR_in);\n    const k = bigInt(_k);\n    for (let i=0; i<NROUNDS; i++) {\n        const c = cts[i];\n        const t = (i==0) ? F.add(xL, k) : F.add(F.add(xL, k), c);\n        const xR_tmp = bigInt(xR);\n        if (i < (NROUNDS - 1)) {\n          xR = xL;\n          xL = F.add(xR_tmp, F.exp(t, 5));\n        } else {\n          xR = F.add(xR_tmp, F.exp(t, 5));\n        }\n    }\n    return {\n      xL: F.affine(xL),\n      xR: F.affine(xR),\n    };\n};\n\nexports.multiHash = (arr, key, numOutputs) => {\n    if (typeof(numOutputs) === \"undefined\") {\n      numOutputs = 1;\n    }\n    if (typeof(key) === \"undefined\") {\n        key = F.zero;\n    }\n\n    let R = F.zero;\n    let C = F.zero;\n\n    for (let i=0; i<arr.length; i++) {\n      R = F.add(R, bigInt(arr[i]));\n      const S = exports.hash(R, C, key);\n      R = S.xL;\n      C = S.xR;\n    }\n    let outputs = [R];\n    for (let i=1; i < numOutputs; i++) {\n      const S = exports.hash(R, C, key);\n      R = S.xL;\n      C = S.xR;\n      outputs.push(R);\n    }\n    if (numOutputs == 1) {\n      return F.affine(outputs[0]);\n    } else {\n      return outputs.map(x => F.affine(x));\n    }\n};\n"},"lineCount":87}},"error":null,"hash":"224e1edf5da3858b43d11caac685b0f9","cacheData":{"env":{}}}