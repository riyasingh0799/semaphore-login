{"id":"node_modules/circomlib/src/poseidon.js","dependencies":[{"name":"/Users/riyasingh/myapps/semaphore-mini/packages/newfrontend/package.json","includedInParent":true,"mtime":1615340050722},{"name":"/Users/riyasingh/myapps/semaphore-mini/packages/newfrontend/.babelrc","includedInParent":true,"mtime":1615332365597},{"name":"/Users/riyasingh/myapps/semaphore-mini/packages/newfrontend/node_modules/circomlib/package.json","includedInParent":true,"mtime":1615335221010},{"name":"snarkjs","loc":{"line":2,"column":23},"parent":"/Users/riyasingh/myapps/semaphore-mini/packages/newfrontend/node_modules/circomlib/src/poseidon.js","resolved":"/Users/riyasingh/myapps/semaphore-mini/packages/newfrontend/node_modules/snarkjs/index.js"},{"name":"blake2b","loc":{"line":3,"column":24},"parent":"/Users/riyasingh/myapps/semaphore-mini/packages/newfrontend/node_modules/circomlib/src/poseidon.js","resolved":"/Users/riyasingh/myapps/semaphore-mini/packages/newfrontend/node_modules/blake2b/index.js"},{"name":"assert","loc":{"line":4,"column":23},"parent":"/Users/riyasingh/myapps/semaphore-mini/packages/newfrontend/node_modules/circomlib/src/poseidon.js","resolved":"/Users/riyasingh/myapps/semaphore-mini/packages/newfrontend/node_modules/node-libs-browser/node_modules/assert/assert.js"},{"name":"buffer","parent":"/Users/riyasingh/myapps/semaphore-mini/packages/newfrontend/node_modules/circomlib/src/poseidon.js","resolved":"/Users/riyasingh/myapps/semaphore-mini/packages/newfrontend/node_modules/node-libs-browser/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nconst bn128 = require(\"snarkjs\").bn128;\nconst bigInt = require(\"snarkjs\").bigInt;\nconst blake2b = require('blake2b');\nconst assert = require(\"assert\");\nconst F = bn128.Fr;\n\nconst SEED = \"poseidon\";\nconst NROUNDSF = 8;\nconst NROUNDSP = 57;\nconst T = 6;\n\nfunction getPseudoRandom(seed, n) {\n    const res = [];\n    let input = Buffer.from(seed);\n    let h = blake2b(32).update(input).digest()\n    while (res.length<n) {\n        const n = F.affine(bigInt.leBuff2int(h));\n        res.push(n);\n        h = blake2b(32).update(h).digest()\n    }\n\n    return res;\n}\n\nfunction allDifferent(v) {\n    for (let i=0; i<v.length; i++) {\n        if (v[i].isZero()) return false;\n        for (let j=i+1; j<v.length; j++) {\n            if (v[i].equals(v[j])) return false;\n        }\n    }\n    return true;\n}\n\nexports.getMatrix = (t, seed, nRounds) => {\n    if (typeof seed === \"undefined\") seed = SEED;\n    if (typeof nRounds === \"undefined\") nRounds = NROUNDSF + NROUNDSP;\n    if (typeof t === \"undefined\") t = T;\n    assert(t<=6);  // Force the same matrix for all.\n    t=6;\n    let nonce = \"0000\";\n    let cmatrix = getPseudoRandom(seed+\"_matrix_\"+nonce, t*2);\n    while (!allDifferent(cmatrix)) {\n        nonce = (Number(nonce)+1)+\"\";\n        while(nonce.length<4) nonce = \"0\"+nonce;\n        cmatrix = getPseudoRandom(seed+\"_matrix_\"+nonce, t*2);\n    }\n\n    const M = new Array(t);\n    for (let i=0; i<t; i++) {\n        M[i] = new Array(t);\n        for (let j=0; j<t; j++) {\n            M[i][j] = F.affine(F.inverse(F.sub(cmatrix[i], cmatrix[t+j])));\n        }\n    }\n    return M;\n};\n\nexports.getConstants = (t, seed, nRounds) => {\n    if (typeof seed === \"undefined\") seed = SEED;\n    if (typeof nRounds === \"undefined\") nRounds = NROUNDSF + NROUNDSP;\n    if (typeof t === \"undefined\") t = T;\n    const cts = getPseudoRandom(seed+\"_constants\", nRounds);\n    return cts;\n};\n\nfunction ark(state, c) {\n    for (let j=0; j<state.length; j++ ) {\n        state[j] = F.add(state[j], c);\n    }\n}\n\nfunction sigma(a) {\n    return F.mul(a, F.square(F.square(a,a)));\n}\n\nfunction mix(state, M) {\n    const newState = new Array(state.length);\n    for (let i=0; i<state.length; i++) {\n        newState[i] = F.zero;\n        for (let j=0; j<state.length; j++) {\n            newState[i] = F.add(newState[i], F.mul(M[i][j], state[j]) );\n        }\n    }\n    for (let i=0; i<state.length; i++) state[i] = newState[i];\n}\n\nexports.createHash = (t, nRoundsF, nRoundsP, seed) => {\n\n    if (typeof seed === \"undefined\") seed = SEED;\n    if (typeof nRoundsF === \"undefined\") nRoundsF = NROUNDSF;\n    if (typeof nRoundsP === \"undefined\") nRoundsP = NROUNDSP;\n    if (typeof t === \"undefined\") t = T;\n\n    assert(nRoundsF % 2 == 0);\n    const C = exports.getConstants(t, seed, nRoundsF + nRoundsP);\n    const M = exports.getMatrix(t, seed, nRoundsF + nRoundsP);\n    return function(inputs) {\n        let state = [];\n        assert(inputs.length <= t);\n        assert(inputs.length > 0);\n        for (let i=0; i<inputs.length; i++) state[i] = bigInt(inputs[i]);\n        for (let i=inputs.length; i<t; i++) state[i] = F.zero;\n\n        for (let i=0; i< nRoundsF + nRoundsP; i++) {\n            ark(state, C[i]);\n            if ((i<nRoundsF/2) || (i >= nRoundsF/2 + nRoundsP)) {\n                for (let j=0; j<t; j++) state[j] = sigma(state[j]);\n            } else {\n                state[0] = sigma(state[0]);\n            }\n            mix(state, M);\n        }\n        return F.affine(state[0]);\n    };\n};\n\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/circomlib/src/poseidon.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}}],"sources":{"node_modules/circomlib/src/poseidon.js":"const bn128 = require(\"snarkjs\").bn128;\nconst bigInt = require(\"snarkjs\").bigInt;\nconst blake2b = require('blake2b');\nconst assert = require(\"assert\");\nconst F = bn128.Fr;\n\nconst SEED = \"poseidon\";\nconst NROUNDSF = 8;\nconst NROUNDSP = 57;\nconst T = 6;\n\nfunction getPseudoRandom(seed, n) {\n    const res = [];\n    let input = Buffer.from(seed);\n    let h = blake2b(32).update(input).digest()\n    while (res.length<n) {\n        const n = F.affine(bigInt.leBuff2int(h));\n        res.push(n);\n        h = blake2b(32).update(h).digest()\n    }\n\n    return res;\n}\n\nfunction allDifferent(v) {\n    for (let i=0; i<v.length; i++) {\n        if (v[i].isZero()) return false;\n        for (let j=i+1; j<v.length; j++) {\n            if (v[i].equals(v[j])) return false;\n        }\n    }\n    return true;\n}\n\nexports.getMatrix = (t, seed, nRounds) => {\n    if (typeof seed === \"undefined\") seed = SEED;\n    if (typeof nRounds === \"undefined\") nRounds = NROUNDSF + NROUNDSP;\n    if (typeof t === \"undefined\") t = T;\n    assert(t<=6);  // Force the same matrix for all.\n    t=6;\n    let nonce = \"0000\";\n    let cmatrix = getPseudoRandom(seed+\"_matrix_\"+nonce, t*2);\n    while (!allDifferent(cmatrix)) {\n        nonce = (Number(nonce)+1)+\"\";\n        while(nonce.length<4) nonce = \"0\"+nonce;\n        cmatrix = getPseudoRandom(seed+\"_matrix_\"+nonce, t*2);\n    }\n\n    const M = new Array(t);\n    for (let i=0; i<t; i++) {\n        M[i] = new Array(t);\n        for (let j=0; j<t; j++) {\n            M[i][j] = F.affine(F.inverse(F.sub(cmatrix[i], cmatrix[t+j])));\n        }\n    }\n    return M;\n};\n\nexports.getConstants = (t, seed, nRounds) => {\n    if (typeof seed === \"undefined\") seed = SEED;\n    if (typeof nRounds === \"undefined\") nRounds = NROUNDSF + NROUNDSP;\n    if (typeof t === \"undefined\") t = T;\n    const cts = getPseudoRandom(seed+\"_constants\", nRounds);\n    return cts;\n};\n\nfunction ark(state, c) {\n    for (let j=0; j<state.length; j++ ) {\n        state[j] = F.add(state[j], c);\n    }\n}\n\nfunction sigma(a) {\n    return F.mul(a, F.square(F.square(a,a)));\n}\n\nfunction mix(state, M) {\n    const newState = new Array(state.length);\n    for (let i=0; i<state.length; i++) {\n        newState[i] = F.zero;\n        for (let j=0; j<state.length; j++) {\n            newState[i] = F.add(newState[i], F.mul(M[i][j], state[j]) );\n        }\n    }\n    for (let i=0; i<state.length; i++) state[i] = newState[i];\n}\n\nexports.createHash = (t, nRoundsF, nRoundsP, seed) => {\n\n    if (typeof seed === \"undefined\") seed = SEED;\n    if (typeof nRoundsF === \"undefined\") nRoundsF = NROUNDSF;\n    if (typeof nRoundsP === \"undefined\") nRoundsP = NROUNDSP;\n    if (typeof t === \"undefined\") t = T;\n\n    assert(nRoundsF % 2 == 0);\n    const C = exports.getConstants(t, seed, nRoundsF + nRoundsP);\n    const M = exports.getMatrix(t, seed, nRoundsF + nRoundsP);\n    return function(inputs) {\n        let state = [];\n        assert(inputs.length <= t);\n        assert(inputs.length > 0);\n        for (let i=0; i<inputs.length; i++) state[i] = bigInt(inputs[i]);\n        for (let i=inputs.length; i<t; i++) state[i] = F.zero;\n\n        for (let i=0; i< nRoundsF + nRoundsP; i++) {\n            ark(state, C[i]);\n            if ((i<nRoundsF/2) || (i >= nRoundsF/2 + nRoundsP)) {\n                for (let j=0; j<t; j++) state[j] = sigma(state[j]);\n            } else {\n                state[0] = sigma(state[0]);\n            }\n            mix(state, M);\n        }\n        return F.affine(state[0]);\n    };\n};\n\n\n"},"lineCount":120}},"error":null,"hash":"39cedd83f608629273bff9c8bf23e823","cacheData":{"env":{}}}